<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="sitecore" type="Sitecore.FakeDb.Configuration.ConfigReader, Sitecore.FakeDb"/>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, Sitecore.Logging"/>
  </configSections>
  <appSettings>
    <add key="xunit.parallelizeTestCollections" value="false"/>
  </appSettings>
 
  <sitecore>
    <settings>
      <setting name="LicenseFile" value="..\..\license.xml"/>
      <!--  MEDIA - REQUEST PROTECTION - ENABLED
            Specifies whether media request protection is enabled or not.
            Default value: true
      -->
      <setting name="Media.RequestProtection.Enabled" value="false" />
      <!--  MEDIA - REQUEST PROTECTION - HASH PARAMETER NAME
            The name of the query string parameter that stores the calculated hash value.
            Default value: hash
      -->
      <setting name="Media.RequestProtection.HashParameterName" value="hash" />
      <!--  MEDIA - REQUEST PROTECTION - LOGGING - ENABLED
            Specifies whether the media request protection feature will output detailed information to the Sitecore log file.
            Default value: true
      -->
      <setting name="Media.RequestProtection.Logging.Enabled" value="true" />
      <!--  MEDIA - REQUEST PROTECTION - SHARED SECRET
            Specifies the shared secret to use as a salt when generating hash values. You should change the shared secret to a random string
            and not use the default value.
            In a multi-instance setup, use the same value for Media.RequestProtection.SharedSecret on every instance. Otherwise, dynamic image
            signing will not work correctly if the image URL is generated by one instance and the request is handled by a different instance.
      -->
      <setting name="Media.RequestProtection.SharedSecret" value="D1FA5,7C4AED9.F0A32E84AA0/FAEF|D0DE9E|\8FD6AEC+8F87F-B037_66C8)34C99921(EB23BE79!AD9D5D@CC1DD#9AD2361$32102%900B723^CF98;0957FC" />
    </settings>
    <!-- DATABASE TYPE
         For Sitecore versions prior to 8.2 should be 'Sitecore.Data.Database, Sitecore.Kernel'.
         For Sitecore 8.2 and later should be 'Sitecore.Data.DefaultDatabase, Sitecore.Kernel'. -->
    <sc.variable name="databaseType" value="Sitecore.Data.Database, Sitecore.Kernel"/>
    <pipelines>
      <renderField>
        <processor type="Glass.Mapper.Sc.FakeDb.Infrastructure.Pipelines.RenderField.SimpleRenderField,Glass.Mapper.Sc.FakeDb"/>
        <processor type="Sitecore.Pipelines.RenderField.GetImageFieldValue, Sitecore.Kernel"/>
        <processor type="Glass.Mapper.Sc.FakeDb.Infrastructure.Pipelines.RenderField.RenderWebEditing,Glass.Mapper.Sc.FakeDb"/>
      </renderField>
      <getChromeData></getChromeData>
    </pipelines>
  <factories>
      <factory id="nsubstitute" type="Sitecore.FakeDb.NSubstitute.NSubstituteFactory, Sitecore.FakeDb.NSubstitute"/>
    </factories>
    <mediaLibrary>
      <requestProtection>
        <!--  IGNORE SITES
              Specifies a list of site names for which the media protection module should not sign image ULRs with a hash value. When
              Sitecore processes an incoming media request for these sites, it does not check if there is a valid hash value.
        -->
        <ignoreSites>
          <site name="shell"/>
          <site name="login"/>
          <site name="admin"/>
          <site name="service"/>
          <site name="scheduler"/>
          <site name="system"/>
          <site name="publisher"/>
        </ignoreSites>

        <!--  PROTECTED MEDIA QUERY PARAMETERS
              Specifies a list of parameters that are used to calculate hash values for media requests. 
              The list of parameters is used when the module calculates hash values and appends them to the query strings of the generated
              media URLs, and when the hash values are calculated for incoming media requests and compared to the expected hash values.
              You should add any custom image scaling parameters to this setting if these parameters affect the dimensions or file size of
              dynamically resized images.
        -->
        <protectedMediaQueryParameters>
          <parameter description="width" name="w"/>
          <parameter description="height" name="h"/>
          <parameter description="max width" name="mw"/>
          <parameter description="max height" name="mh"/>
          <parameter description="scale" name="sc"/>
          <parameter description="allow stretch" name="as"/>
          <parameter description="background color" name="bc"/>
          <parameter description="database name" name="db"/>
          <parameter description="ignore aspect ratio" name="iar"/>
          <parameter description="language code" name="la"/>
          <parameter description="thumbnail" name="thn"/>
          <parameter description="version number" name="vs"/>
          <parameter description="content database" name="sc_content"/>
          <parameter description="content language name" name="sc_lang"/>
          <parameter description="context site" name="sc_site"/>
          <parameter description="grayscale filter" name="gray"/>
        </protectedMediaQueryParameters>

      </requestProtection>
    </mediaLibrary>
  </sitecore>
  <log4net/>
  <system.web>
    <membership defaultProvider="fake">
      <providers>
        <clear/>
        <add name="fake" type="Sitecore.FakeDb.Security.Web.FakeMembershipProvider, Sitecore.FakeDb"/>
      </providers>
    </membership>
    <roleManager defaultProvider="fake" enabled="true">
      <providers>
        <clear/>
        <add name="fake" type="Sitecore.FakeDb.Security.Web.FakeRoleProvider, Sitecore.FakeDb"/>
      </providers>
    </roleManager>
    <profile defaultProvider="fake" enabled="true" inherits="Sitecore.FakeDb.Profile.FakeUserProfile, Sitecore.FakeDb">
      <providers>
        <clear/>
        <add name="fake" type="Sitecore.FakeDb.Security.Web.FakeProfileProvider, Sitecore.FakeDb"/>
      </providers>
      <properties>
        <clear/>
        <add type="System.String" name="SC_UserData"/>
      </properties>
    </profile>
  </system.web>
  
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2"/></startup></configuration>
